name: Build Android and iOS

on: push

jobs:
  install-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup caching
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: cache-${{ runner.OS }}-${{ hashFiles('**/*.lock') }}
          restore-keys: |
            cache-${{ runner.OS }}-
      - name: Install dependencies
        run: |
          yarn
      - name: Run tests
        run: |
          yarn workspace @thu-info/app lint
          yarn workspace @thu-info/app test
  build-android:
    needs: install-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup caching
        if: startsWith(github.ref, 'refs/tags') == false
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: cache-${{ runner.OS }}-${{ hashFiles('**/*.lock') }}
          restore-keys: |
            cache-${{ runner.OS }}-
      - name: Install dependencies
        run: |
          yarn
      - name: Prepare for building
        env:
          SECRET_PASSWORD: ${{ secrets.SECRET_PASSWORD }}
        run: |
          openssl aes-256-cbc -k "$SECRET_PASSWORD" -in apps/thu-info-app/android/app/THUInfo.jks.enc -out apps/thu-info-app/android/app/THUInfo.jks -d
      - name: Build android release
        uses: gradle/gradle-build-action@v2
        env:
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
          SIGNATURE_DIGEST: ${{ secrets.SIGNATURE_DIGEST }}
        with:
          arguments: assembleRelease
          build-root-directory: apps/thu-info-app/android
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: apps/thu-info-app/android/app/build/outputs/apk/release/app-release.apk
      - name: Prepare for release
        id: prepare_release
        if: startsWith(github.ref, 'refs/tags')
        run: |
          export ref='${{ github.ref }}'
          export tag=${ref:10}
          echo "::set-output name=tag::$tag"
          mv apps/thu-info-app/android/app/build/outputs/apk/release/app-release.apk THUInfo_release_${tag}.apk
      - name: Prepare for building (allow rooted)
        run: |
          sed -i "/preventRoot/d" apps/thu-info-app/android/app/src/main/java/com/unidy2002/thuinfo/MainApplication.kt
      - name: Build android release (allow rooted)
        uses: gradle/gradle-build-action@v2
        env:
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
          SIGNATURE_DIGEST: ${{ secrets.SIGNATURE_DIGEST }}
        with:
          arguments: assembleRelease
          build-root-directory: apps/thu-info-app/android
      - name: Upload artifact (allow rooted)
        uses: actions/upload-artifact@v3
        with:
          name: app-release-allow-rooted.apk
          path: apps/thu-info-app/android/app/build/outputs/apk/release/app-release.apk
      - name: Prepare for release (allow rooted)
        if: startsWith(github.ref, 'refs/tags')
        run: |
          export ref='${{ github.ref }}'
          export tag=${ref:10}
          mv apps/thu-info-app/android/app/build/outputs/apk/release/app-release.apk THUInfo_release_${tag}_allow_rooted.apk
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: ./release
      - name: Upload to GitHub release
        if: startsWith(github.ref, 'refs/tags')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: THUInfo_release_${{ steps.prepare_release.outputs.tag }}.apk
          asset_name: THUInfo_release_${{ steps.prepare_release.outputs.tag }}.apk
          asset_content_type: 'application/vnd.android.package-archive'
      - name: Upload to GitHub release (allow rooted)
        if: startsWith(github.ref, 'refs/tags')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: THUInfo_release_${{ steps.prepare_release.outputs.tag }}_allow_rooted.apk
          asset_name: THUInfo_release_${{ steps.prepare_release.outputs.tag }}_allow_rooted.apk
          asset_content_type: 'application/vnd.android.package-archive'
  build-ios:
    needs: install-and-test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup caching
        if: startsWith(github.ref, 'refs/tags') == false
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
            apps/thu-info-app/ios/Pods
            vendor/bundle
          key: cache-${{ runner.OS }}-${{ hashFiles('**/*.lock') }}
          restore-keys: |
            cache-${{ runner.OS }}-
      - name: Install dependencies
        run: |
          yarn
          bundle install
          cd apps/thu-info-app/ios && pod update hermes-engine --no-repo-update && pod install && cd ../../..
      - name: Output Podfile.lock
        run: |
          echo '### Summary of command `pod install`' >> $GITHUB_STEP_SUMMARY
          echo 'Content of `Podfile.lock`:' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat apps/thu-info-app/ios/Podfile.lock >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      - name: Output Gemfile.lock
        run: |
          echo '### Summary of command `bundle install`' >> $GITHUB_STEP_SUMMARY
          echo 'Content of `Gemfile.lock`:' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat Gemfile.lock >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      - name: SSH setting up
        run: |
          echo "${{ secrets.CERTIFICATE_REPO_PRIVATE_KEY }}" | tr -d "\r" | ssh-add - > /dev/null
      - name: Update beta
        run: cd apps/thu-info-app/ios && fastlane beta
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APPSTORE_API_PRIVATE_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
          APPSTORE_API_PRIVATE_KEY_ID: ${{ secrets.APPSTORE_API_PRIVATE_KEY_ID }}
          APPSTORE_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: thu_info.ipa
          path: apps/thu-info-app/ios/thu_info.ipa
